{
    "docker.commands.build": "${containerCommand} build --pull --rm -f \"${dockerfile}\" -t ${tag} \"${context}\" --progress plain",
    "terminal.integrated.fontFamily": "monospace",
    "clangd.path": "/usr/bin/clangd-18",
    "clangd.restartAfterCrash": true,
    "clangd.arguments": [
        // If set to true, code completion will include index symbols that are not defined in the scopes
        // (e.g. namespaces) visible from the code completion point. Such completions can insert scope qualifiers
        "--all-scopes-completion",
        // Index project code in the background and persist index on disk.
        "--background-index",
        // Enable clang-tidy diagnostics
        "--clang-tidy",
        // Whether the clang-parser is used for code-completion
        //   Use text-based completion if the parser is not ready (auto)
        "--completion-parse=auto",
        // Granularity of code completion suggestions
        //   One completion item for each semantically distinct completion, with full type information (detailed)
        "--completion-style=detailed",
        // clang-format style to apply by default when no .clang-format file is found
        "--fallback-style=Google",
        // When disabled, completions contain only parentheses for function calls.
        // When enabled, completions also contain placeholders for method parameters
        "--function-arg-placeholders",
        // Add #include directives when accepting code completions
        //   Include what you use. Insert the owning header for top-level symbols, unless the
        //   header is already directly included or the symbol is forward-declared
        "--header-insertion=iwyu",
        // Prepend a circular dot or space before the completion label, depending on whether an include line will be inserted or not
        "--header-insertion-decorators"
    ],
    "cmake.sourceDirectory": "/workspace/src",
    "cmake.configureOnOpen": false,
    "editor.semanticHighlighting.enabled": true,
    "ros.distro": "noetic",
    "python.linting.enabled": true,
    "python.linting.pylintArgs": [
        "--init-hook"
    ],
    "python.autoComplete.extraPaths": [
        "/opt/ros/noetic/lib/python3.8/dist-packages",
        "/usr/local/lib"
    ],
    "python.analysis.extraPaths": [
        "/opt/ros/noetic/lib/python3.8/dist-packages",
        "/usr/local/lib"
    ],
    "files.associations": {
        "*.machine": "xml",
        "*.launch": "xml",
        "*.xacro": "xml",
        "*.sdf": "xml"
    },
    "makefile.configureOnOpen": false,
    "cmake.options.statusBarVisibility": "visible",
    "cmake.generator": "Ninja",
    "containers.commands.build": "${containerCommand} build --pull --rm -f \"${dockerfile}\" -t ${tag} \"${context}\" --progress plain"
}
